name: Build WSA Magisk
on:
  schedule:
    - cron: "0 14 * * *"
  push:
    branches: [main]
  workflow_dispatch:

concurrency: 
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64]
        release: [WIF]
        gapps: [OpenGApps]
        root: [magisk]
        compress-format: [zip]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo dpkg --add-architecture i386 
          sudo mkdir -pm755 /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources
          sudo apt-get update -y
          sudo apt-get install --install-recommends winehq-staging
          sudo apt-get install -y whiptail setools lzip patchelf e2fsprogs python3-pip aria2 p7zip-full attr xz-utils unzip cabextract
          sudo wget -P /usr/local/bin/ https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
          sudo chmod +x /usr/local/bin/winetricks
          wget -P /home/runner/.cache/winetricks/msxml6/ https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/${GITHUB_REF_NAME}/wine/.cache/winetricks/msxml6/msxml6-KB973686-enu-amd64.exe
          pip list --disable-pip-version-check | grep -E "^requests " >/dev/null 2>&1 || python3 -m pip install requests
          winetricks list-installed | grep -E "^msxml6" >/dev/null 2>&1 || winetricks msxml6 || abort

      - name: Grant executable permission
        run: chmod +x ./scripts/build.sh

      - name: Build WSA GAPPS ${{ matrix.root }} ${{ matrix.arch }}
        id: wsa
        run: ./scripts/build.sh --arch ${{ matrix.arch }} --release-type ${{ matrix.release }} --magisk-ver delta --gapps-brand ${{ matrix.gapps }} --root-sol ${{ matrix.root }} --remove-amazon --compress-format ${{ matrix.compress-format }}

      - name: Prepare release tag
        id: date
        run: echo "date=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Upload build to release
        uses: floralatin/upload-release-action@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./output/${{ steps.wsa.outputs.artifact }}.${{ matrix.compress-format }}
          tag: ${{ steps.date.outputs.date }}
          overwrite: true
          file_glob: true